
./build/systick.elf:     file format elf32-littlearm
./build/systick.elf
architecture: armv3m, flags 0x00000012:
EXEC_P, HAS_SYMS
start address 0x00000041

Program Header:
    LOAD off    0x00000078 vaddr 0x00000000 paddr 0x00000000 align 2**3
         filesz 0x00000370 memsz 0x00000370 flags r-x
    LOAD off    0x00000000 vaddr 0x20000000 paddr 0x00000370 align 2**3
         filesz 0x00000000 memsz 0x00000018 flags rw-
private flags = 0x5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000366  00000000  00000000  00000078  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init         00000004  00000368  00000368  000003e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fini         00000004  0000036c  0000036c  000003e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .data         00000000  20000000  20000000  000003e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00000018  20000000  00000370  000003e8  2**2
                  ALLOC
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000368 l    d  .init	00000000 .init
0000036c l    d  .fini	00000000 .fini
20000000 l    d  .data	00000000 .data
20000000 l    d  .bss	00000000 .bss
00000000 l    df *ABS*	00000000 entry.o
00000070 l       .text	00000000 __data_start_lma_val
00000074 l       .text	00000000 __data_start_vma_val
00000078 l       .text	00000000 __data_end_vma_val
00000056 l       .text	00000000 __loop_copy_section
0000007c l       .text	00000000 __bss_start_lma_val
00000080 l       .text	00000000 __bss_start_vma_val
00000084 l       .text	00000000 __bss_end_vma_val
00000068 l       .text	00000000 __main_section_start
00000066 l       .text	00000000 __loop_copy_section_end
0000006c l       .text	00000000 __halt
0000006e l       .text	00000000 __exc_handler
00000000 l    df *ABS*	00000000 systick.c
20000010 l       .bss	00000004 handler_ticks.1
20000014 l       .bss	00000004 tick_cntr.0
00000000 l    df *ABS*	00000000 led.c
00000000 l    df *ABS*	00000000 crti.o
00000000 g       *ABS*	00000000 FLASH_VADDR
0000015c g     F .text	00000028 more_precise_delay_forbidden_by_quantum_mechanics_1000ms
20000000 g       *ABS*	00000000 SRAM_PADDR
00000370 g       *ABS*	00000000 __bss_start_lma
20000000 g       .bss	00000000 __bss_start_vma
000001fc g     F .text	00000068 systick_handler
08000000 g       *ABS*	00000000 FLASH_PADDR
00002000 g       *ABS*	00000000 SRAM_SIZE
00000040 g     F .text	00000000 __reset_handler
00010000 g       *ABS*	00000000 FLASH_SIZE
20000008 g     O .bss	00000008 led9
00000368 g     F .init	00000000 _init
20002000 g       *ABS*	00000000 __stack_start
00000318 g     F .text	00000026 led_on
00000088 g     F .text	000000d4 board_clocking_init
00000184 g     F .text	0000001c board_gpio_init
000001a0 g     F .text	0000005c systick_init
20000018 g       .bss	00000000 __bss_end_vma
00000264 g     F .text	00000068 main
0000036c g     F .fini	00000000 _fini
0000033e g     F .text	00000028 led_off
20000000 g       *ABS*	00000000 SRAM_VADDR
000002cc g     F .text	0000004c led_init
00000370 g       *ABS*	00000000 __data_start_lma
20000000 g       .data	00000000 __data_start_vma
20000000 g     O .bss	00000008 led8
20000000 g       .data	00000000 __data_end_vma



./build/systick.elf:     file format elf32-littlearm
./build/systick.elf
architecture: armv3m, flags 0x00000012:
EXEC_P, HAS_SYMS
start address 0x00000041

Program Header:
    LOAD off    0x00000078 vaddr 0x00000000 paddr 0x00000000 align 2**3
         filesz 0x00000370 memsz 0x00000370 flags r-x
    LOAD off    0x00000000 vaddr 0x20000000 paddr 0x00000370 align 2**3
         filesz 0x00000000 memsz 0x00000018 flags rw-
private flags = 0x5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000366  00000000  00000000  00000078  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init         00000004  00000368  00000368  000003e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fini         00000004  0000036c  0000036c  000003e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .data         00000000  20000000  20000000  000003e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00000018  20000000  00000370  000003e8  2**2
                  ALLOC
  5 .debug_line   00000312  00000000  00000000  000003e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   0000034d  00000000  00000000  000006fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 0000023b  00000000  00000000  00000a47  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_aranges 00000060  00000000  00000000  00000c88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    00000205  00000000  00000000  00000ce8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000134  00000000  00000000  00000ef0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000368 l    d  .init	00000000 .init
0000036c l    d  .fini	00000000 .fini
20000000 l    d  .data	00000000 .data
20000000 l    d  .bss	00000000 .bss
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 entry.o
00000070 l       .text	00000000 __data_start_lma_val
00000074 l       .text	00000000 __data_start_vma_val
00000078 l       .text	00000000 __data_end_vma_val
00000056 l       .text	00000000 __loop_copy_section
0000007c l       .text	00000000 __bss_start_lma_val
00000080 l       .text	00000000 __bss_start_vma_val
00000084 l       .text	00000000 __bss_end_vma_val
00000068 l       .text	00000000 __main_section_start
00000066 l       .text	00000000 __loop_copy_section_end
0000006c l       .text	00000000 __halt
0000006e l       .text	00000000 __exc_handler
00000000 l    df *ABS*	00000000 systick.c
20000010 l       .bss	00000004 handler_ticks.1
20000014 l       .bss	00000004 tick_cntr.0
00000000 l    df *ABS*	00000000 led.c
00000000 l    df *ABS*	00000000 crti.o
00000000 g       *ABS*	00000000 FLASH_VADDR
0000015c g     F .text	00000028 more_precise_delay_forbidden_by_quantum_mechanics_1000ms
20000000 g       *ABS*	00000000 SRAM_PADDR
00000370 g       *ABS*	00000000 __bss_start_lma
20000000 g       .bss	00000000 __bss_start_vma
000001fc g     F .text	00000068 systick_handler
08000000 g       *ABS*	00000000 FLASH_PADDR
00002000 g       *ABS*	00000000 SRAM_SIZE
00000040 g     F .text	00000000 __reset_handler
00010000 g       *ABS*	00000000 FLASH_SIZE
20000008 g     O .bss	00000008 led9
00000368 g     F .init	00000000 _init
20002000 g       *ABS*	00000000 __stack_start
00000318 g     F .text	00000026 led_on
00000088 g     F .text	000000d4 board_clocking_init
00000184 g     F .text	0000001c board_gpio_init
000001a0 g     F .text	0000005c systick_init
20000018 g       .bss	00000000 __bss_end_vma
00000264 g     F .text	00000068 main
0000036c g     F .fini	00000000 _fini
0000033e g     F .text	00000028 led_off
20000000 g       *ABS*	00000000 SRAM_VADDR
000002cc g     F .text	0000004c led_init
00000370 g       *ABS*	00000000 __data_start_lma
20000000 g       .data	00000000 __data_start_vma
20000000 g     O .bss	00000008 led8
20000000 g       .data	00000000 __data_end_vma


